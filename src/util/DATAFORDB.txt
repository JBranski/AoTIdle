app.post( '/api/login', jsonParser, (req, res, next) => {
    const {username, password} = req.body;    db.select( '*' )
        .first()
        .from( 'users' )
        .where( {username: username} )
        .then( data => {
            console.log( data );            bcrypt.compare(password, data.password)
                .then((result) => {
                    if( result ){
                        return res.status( 200 ).json({ message: `Welcome back ${data.firstname} ${data.lastname}.`})
                    }
                    else{
                        return res.status( 401 ).send( "Wrong credentials" );
                    }
                });
        })});app.post( '/api/hash', jsonParser, ( req, res, next ) => {
    const { username, password, firstname, lastname } = req.body;    bcrypt.hash(password, 10)
        .then((err, hash)  => {
            if( err ){
                return res.status(400).end();
            }            const newUser = {
                username,
                firstname,
                lastname,
                password : hash
            };            db.insert( newUser )
                .into( 'users' )
                .returning( '*' )
                .then( result => {
                    return res.status( 201 ).json(result[0]);
                })
    });});






SELECT s.firstname, c.name, g.grade
FROM courses c, grades g, students s
WHERE  g.course = c.id AND s.id = g.STUDENTID AND s.id = 12345SELECT s.firstname, c.name, g.grade
FROM courses c JOIN grades g ON g.course = c.id JOIN students s ON s.id = g.studentid
WHERE s.id = 12345 






database()
        .select('s.firstname AS StudentName', 'c.name AS CourseName', 'g.grade AS Grade')
        .from('students AS s')
        .join('grades AS g',  {'g.studentid' : 's.id'})
        .join('courses AS c', {'c.id' : 'g.course'})
        .where({'s.id' : 12345})
